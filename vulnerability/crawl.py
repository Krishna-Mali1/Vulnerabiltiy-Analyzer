#!/usr/bin/env python
import re
import urllib.parse as urlparse
import requests
from bs4 import BeautifulSoup

class Crawl:
    def __init__(self, url, ignore_links):
        self.session = requests.session()
        self.session.headers.update({
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
        })
        self.target_url = url
        self.target_link = []
        self.link_to_ignore = ignore_links

    def extract_link_url(self, url):
        try:
            response = self.session.get(url)
            return re.findall(r'href=["\'](.*?)["\']', response.content.decode(errors="ignore"))
        except requests.exceptions.RequestException:
            return []

    def crawl(self, url=None):
        if url is None:
            url = self.target_url
        href_links = self.extract_link_url(url)

        for link in href_links:
            link = urlparse.urljoin(url, link)
            if '#' in link:
                link = link.split("#")[0]
            if self.target_url in link and link not in self.target_link and link not in self.link_to_ignore:
                self.target_link.append(link)
                print(link)
                self.crawl(link)

    def extract_fourms(self, url):
        try:
            response = self.session.get(url)
            parsed_html = BeautifulSoup(response.content, "html.parser")
            return parsed_html.find_all("form")
        except requests.exceptions.RequestException:
            return []

    def submit_form(self, form, value, url):
        action = form.get("action")
        post_url = urlparse.urljoin(url, action)
        method = form.get("method", "get").lower()

        input_list = form.find_all(["input", "textarea"])
        post_data = {}

        for input_field in input_list:
            input_name = input_field.get("name")
            if not input_name:
                continue
            input_type = input_field.get("type", "text")
            input_value = input_field.get("value", "")
            if input_type in ["text", "search", "password", "email", "textarea"]:
                input_value = value
            post_data[input_name] = input_value

        try:
            if method == "post":
                return self.session.post(post_url, data=post_data)
            return self.session.get(post_url, params=post_data)
        except requests.exceptions.RequestException:
            return type("Response", (), {"text": "", "content": b""})()  # fake empty response on error
